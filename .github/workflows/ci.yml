name: "Build and Test Go Project"

on:
  push:
    branches: main
  pull_request:
    branches: main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      - name: Build
        run: go build -v ./...

  test:
    runs-on: ubuntu-latest
    needs: build  # Ensure this job runs after build
    services:
      postgres:
        image: postgres:latest
        ports: 
          - 5432:5432
        env: 
          POSTGRES_USER: user  # Match this with your testDsn
          POSTGRES_PASSWORD: password  # Match this with your testDsn
          POSTGRES_DB: db  # Match this with your testDsn
        options: >-
          --health-cmd "pg_isready -U user" 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5
          

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      - name: Go Test
        run: go test -v ./...

      - name: Upload Test Results
        if: always()  # Upload test results even if tests fail
        run: go test -v ./... | tee results.txt
